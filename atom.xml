<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chanh&#39;s Blog</title>
  <subtitle>码农，程序猿，JSer</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chanh.xyz/"/>
  <updated>2016-06-27T09:53:58.392Z</updated>
  <id>http://chanh.xyz/</id>
  
  <author>
    <name>Chanh Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>浅析《简约至上：交互式设计四策略》</title>
    <link href="http://chanh.xyz/2016/06/25/simple-and-usable-web-mobile-and-interaction-design/"/>
    <id>http://chanh.xyz/2016/06/25/simple-and-usable-web-mobile-and-interaction-design/</id>
    <published>2016-06-25T01:34:39.000Z</published>
    <updated>2016-06-27T09:53:58.392Z</updated>
    
    <content type="html">&lt;p&gt;本书作者 Giles Colborne 曾任职于英国航空公司，英国物理学会出版社和灵智集团，二十多年潜心钻研交互式设计与易用性，颇有建树…&lt;br&gt;个人认为，无论是广告设计、室内设计、架构设计或是产品设计等等，设计方法和技巧都是相通的。因为都是针对特定人群而设计的，或者说都有自己的用户，且与用户之间都有交互。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;本书主要分为两部分，第一部分：前两章主要介绍“什么是简约？”，“用户分为几种？”，“设计初期的准备与技巧”。第二部分：后面章节主要讲述交互设计的四策略：删除，组织，隐藏，转移。下面按两部分来分析一下作者的设计思想。&lt;/p&gt;
&lt;h2 id=&quot;明确认识简约设计&quot;&gt;&lt;a href=&quot;#明确认识简约设计&quot; class=&quot;headerlink&quot; title=&quot;明确认识简约设计&quot;&gt;&lt;/a&gt;明确认识简约设计&lt;/h2&gt;&lt;p&gt;这部分主要介绍简约的概念及如何理解简约设计，还有一些设计基本技巧。&lt;/p&gt;
&lt;h3 id=&quot;什么样的设计是简约设计？&quot;&gt;&lt;a href=&quot;#什么样的设计是简约设计？&quot; class=&quot;headerlink&quot; title=&quot;什么样的设计是简约设计？&quot;&gt;&lt;/a&gt;什么样的设计是简约设计？&lt;/h3&gt;&lt;p&gt;让用户感觉简单才是真正的简单，而不是管理员或工程师的感觉。&lt;br&gt;简单的用户体验是初学者、新手或是压力下的主流用户的体验。&lt;br&gt;简单是让用户感觉自己在掌控一切，他们不想让产品告诉自己该做什么。&lt;/p&gt;
&lt;h3 id=&quot;明确认识用户，设计主流用户的体验&quot;&gt;&lt;a href=&quot;#明确认识用户，设计主流用户的体验&quot; class=&quot;headerlink&quot; title=&quot;明确认识用户，设计主流用户的体验&quot;&gt;&lt;/a&gt;明确认识用户，设计主流用户的体验&lt;/h3&gt;&lt;p&gt;用户分为三种：专家型用户、随意型用户、主流用户。&lt;br&gt;去用户使用产品的现场体验。&lt;/p&gt;
&lt;h4 id=&quot;忽略专家型用户、随意型用户，以主流用户为主&quot;&gt;&lt;a href=&quot;#忽略专家型用户、随意型用户，以主流用户为主&quot; class=&quot;headerlink&quot; title=&quot;忽略专家型用户、随意型用户，以主流用户为主&quot;&gt;&lt;/a&gt;忽略专家型用户、随意型用户，以主流用户为主&lt;/h4&gt;&lt;p&gt;为什么要忽略他们？要以主流用户为主。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这些用户占比较少。&lt;/li&gt;
&lt;li&gt;他们体会不到主流用户的体验，专家总是想要一些复杂的功能，主流用户会感觉很不好用。&lt;/li&gt;
&lt;li&gt;主流用户最感兴趣的是立即把工作做完，专家刚喜欢首先设定自己的偏好&lt;/li&gt;
&lt;li&gt;别指望说明书能帮助用户或者教会用户什么东西，在面临压力时，很容易忘掉已掌握的知识，也没时间看说明书，又回到初学者的层次&lt;/li&gt;
&lt;li&gt;专家希望控制和定制技术，主流用户可不管什么软件或技术，他们希望自己掌控起来容易、可靠、迅速。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如书中ipod的例子，专家用户会吐槽功能太少，但销量却很高。&lt;/p&gt;
&lt;h4 id=&quot;感情需求&quot;&gt;&lt;a href=&quot;#感情需求&quot; class=&quot;headerlink&quot; title=&quot;感情需求&quot;&gt;&lt;/a&gt;感情需求&lt;/h4&gt;&lt;p&gt;让用户感觉井然有序、易用、轻松自在，从而产生情愫。&lt;/p&gt;
&lt;h4 id=&quot;增强体验&quot;&gt;&lt;a href=&quot;#增强体验&quot; class=&quot;headerlink&quot; title=&quot;增强体验&quot;&gt;&lt;/a&gt;增强体验&lt;/h4&gt;&lt;p&gt;在设计产品时，要站在用户的角度分析他们用产品的目的是什么？去增加衍生的体验，要保证通过用户的语言。&lt;/p&gt;
&lt;h4 id=&quot;用讲故事的形式描述用户体验&quot;&gt;&lt;a href=&quot;#用讲故事的形式描述用户体验&quot; class=&quot;headerlink&quot; title=&quot;用讲故事的形式描述用户体验&quot;&gt;&lt;/a&gt;用讲故事的形式描述用户体验&lt;/h4&gt;&lt;p&gt;故事很容易让人记住，很方便与人分享，可以把大量的体验融入到一个小故事中。&lt;/p&gt;
&lt;h4 id=&quot;如何讲一个用户体验故事？&quot;&gt;&lt;a href=&quot;#如何讲一个用户体验故事？&quot; class=&quot;headerlink&quot; title=&quot;如何讲一个用户体验故事？&quot;&gt;&lt;/a&gt;如何讲一个用户体验故事？&lt;/h4&gt;&lt;p&gt;好的用户故事应该简明、具体、可信且拥有相关细节。&lt;br&gt;三要素： 环境、角色、情节。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; 设计出 &lt;strong&gt;情节&lt;/strong&gt; ====== &amp;gt; 有可信的 &lt;strong&gt;角色&lt;/strong&gt; ====== &amp;gt; 发生在可信的 &lt;strong&gt;环境&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;极端的可用性&quot;&gt;&lt;a href=&quot;#极端的可用性&quot; class=&quot;headerlink&quot; title=&quot;极端的可用性&quot;&gt;&lt;/a&gt;极端的可用性&lt;/h4&gt;&lt;p&gt;要设计简约的体验就要追求极端的可用性目标。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;常规的可用性目标&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;简单性的目标&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;特殊人群可以使用&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;任何人都可以使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;容易使用&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;毫不费力的使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;快速响应&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;瞬间响应&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;快速理解&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;一目了解&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;工作可靠&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;始终工作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;直观的错误信息&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;不出错&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;完整的信息&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;恰好够用的信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;用户测试工作&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;在混乱无序的环境中工作&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;用最简单的词汇描述你的想法&quot;&gt;&lt;a href=&quot;#用最简单的词汇描述你的想法&quot; class=&quot;headerlink&quot; title=&quot;用最简单的词汇描述你的想法&quot;&gt;&lt;/a&gt;用最简单的词汇描述你的想法&lt;/h4&gt;&lt;p&gt;要设计一个东西，首先要拿出一个简洁、清晰、完整的描述(Flip:拍摄和分享视频)，然后再用尽可能简单的方式来实现（瞬间开始拍摄…）。&lt;/p&gt;
&lt;h4 id=&quot;什么因素对用户行为影响最大？&quot;&gt;&lt;a href=&quot;#什么因素对用户行为影响最大？&quot; class=&quot;headerlink&quot; title=&quot;什么因素对用户行为影响最大？&quot;&gt;&lt;/a&gt;什么因素对用户行为影响最大？&lt;/h4&gt;&lt;p&gt;如：用户工作中经常被打断。&lt;br&gt;不能凭空想象，需要花更多的时间观察现实中的人，通常可以用原型或者竟争性产品作为辅助。&lt;/p&gt;
&lt;h4 id=&quot;把需求理解透彻后再着手设计&quot;&gt;&lt;a href=&quot;#把需求理解透彻后再着手设计&quot; class=&quot;headerlink&quot; title=&quot;把需求理解透彻后再着手设计&quot;&gt;&lt;/a&gt;把需求理解透彻后再着手设计&lt;/h4&gt;&lt;p&gt;根据作者的经验，任何项目的前3个方案大约都是对重要问题的描述，越来越复杂，而且脑里会没了想法，这时就需要坚持不懈。&lt;/p&gt;
&lt;h4 id=&quot;让参与项目的每个人真正领悟你的认识&quot;&gt;&lt;a href=&quot;#让参与项目的每个人真正领悟你的认识&quot; class=&quot;headerlink&quot; title=&quot;让参与项目的每个人真正领悟你的认识&quot;&gt;&lt;/a&gt;让参与项目的每个人真正领悟你的认识&lt;/h4&gt;&lt;p&gt;可以见一次讲一次，天天讲，反复讲，直到自己也都厌烦了。。。&lt;br&gt;让人们记住你的核心理念，这样大家在做的时候，就会知道应该要交付什么样的东西。&lt;/p&gt;
&lt;h2 id=&quot;简约四策略&quot;&gt;&lt;a href=&quot;#简约四策略&quot; class=&quot;headerlink&quot; title=&quot;简约四策略&quot;&gt;&lt;/a&gt;简约四策略&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;simple-dvd.jpg&quot; alt=&quot;四策略&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;删除：&lt;/strong&gt;去掉所有不必要的按钮，减到不能再减。&lt;br&gt;&lt;strong&gt;组织：&lt;/strong&gt;按照有意义的标准将按钮划分成组。&lt;br&gt;&lt;strong&gt;隐藏：&lt;/strong&gt;把那些不是最重要的按钮放在活动仓盖下，避免分散用户注意力。&lt;br&gt;&lt;strong&gt;转移：&lt;/strong&gt;只要摇控器上保留最基本的功能按钮，将其它控制转移到电视屏幕的菜单，从而将复杂性从遥控器转移到电视。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这几个策略适用于简化功能或简化内容，每个都各自的优缺点，针对不同问题，去选择正确的策略。&lt;/p&gt;
&lt;h3 id=&quot;删除&quot;&gt;&lt;a href=&quot;#删除&quot; class=&quot;headerlink&quot; title=&quot;删除&quot;&gt;&lt;/a&gt;删除&lt;/h3&gt;&lt;p&gt;美国专门从事跟踪ＩＴ项目成败的权威机构 Standish Group 在2002年发表了一份报告，称 64％ 的软件功能 “从未使用或较少使用”。&lt;br&gt;比如你的遥控器有多少个按钮从没有按过。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;删除或省略功能可以创造出成功的产品。&lt;/li&gt;
&lt;li&gt;删除杂乱的特性可以让设计师更专注于有限的功能，也有助于用户心无旁鹜的完成自己的目标。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;避免错删&quot;&gt;&lt;a href=&quot;#避免错删&quot; class=&quot;headerlink&quot; title=&quot;避免错删&quot;&gt;&lt;/a&gt;避免错删&lt;/h4&gt;&lt;p&gt;一些难做且重要的功能，如果有人强烈反对，得到的答复一般都是 会在“第二阶段”“第三阶段”实现。&lt;br&gt;结果得到一个由简单功能叠加起来的产品，与市场上现有的平庸货别无二致。&lt;br&gt;总结：不能删掉可以增强用户体验且有价值的功能。&lt;/p&gt;
&lt;h4 id=&quot;增加价值始于核心体验&quot;&gt;&lt;a href=&quot;#增加价值始于核心体验&quot; class=&quot;headerlink&quot; title=&quot;增加价值始于核心体验&quot;&gt;&lt;/a&gt;增加价值始于核心体验&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;与新增功能相比，客户更关注基本功能的改进。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;要想增强体验，首先不是想着增加新功能，而要看看现有功能是否可以再优化。&lt;/p&gt;
&lt;h4 id=&quot;砍掉残缺的功能&quot;&gt;&lt;a href=&quot;#砍掉残缺的功能&quot; class=&quot;headerlink&quot; title=&quot;砍掉残缺的功能&quot;&gt;&lt;/a&gt;砍掉残缺的功能&lt;/h4&gt;&lt;p&gt;保留体验差的功能，会额外导致服务与维护的成本。&lt;br&gt;太多的功能和内容会给用户造成精神上的负担（我到底有没有考虑到这一点？）&lt;br&gt;但要决定扔掉一些功能往往都有点不舍，就像扔掉一些对自己没用的东西一样，也会不舍。&lt;/p&gt;
&lt;h4 id=&quot;假如用户想…&quot;&gt;&lt;a href=&quot;#假如用户想…&quot; class=&quot;headerlink&quot; title=&quot;假如用户想…&quot;&gt;&lt;/a&gt;假如用户想…&lt;/h4&gt;&lt;p&gt;“假如用户想…”只会刺激人们的求全心理，担心漏掉了什么需求，为了这份担忧，就要有人付出时间、精力和金钱。&lt;br&gt;总结：不应该凭空想象用户会怎样，一定要实地考查一下用户到底是不是会那样。否则只会浪费资源去设计一些几乎没人用的功能。用户体验，顾名思义是真正用户的体验，而非假想用户的体验。&lt;/p&gt;
&lt;h4 id=&quot;不能盲目听从客户的意见&quot;&gt;&lt;a href=&quot;#不能盲目听从客户的意见&quot; class=&quot;headerlink&quot; title=&quot;不能盲目听从客户的意见&quot;&gt;&lt;/a&gt;不能盲目听从客户的意见&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;如果客户提出的功能要求全部放到产品中，很可能导致产品失败。&lt;br&gt;对客户要敢于说不。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在功能较多的情况下通常要做些适当的牺牲，以免影响整个产品。&lt;/p&gt;
&lt;h4 id=&quot;方案，不是流程&quot;&gt;&lt;a href=&quot;#方案，不是流程&quot; class=&quot;headerlink&quot; title=&quot;方案，不是流程&quot;&gt;&lt;/a&gt;方案，不是流程&lt;/h4&gt;&lt;p&gt;当客户或上级提出一个功能需求时，不能只盯着需求的流程，这样很容易跟着需求的想法设计出一些复杂的流程。&lt;br&gt;要把精力集中到客户的目的上，也许有更好的解决方案可以实现他们的流程。&lt;/p&gt;
&lt;h4 id=&quot;功能太多，可用性降低&quot;&gt;&lt;a href=&quot;#功能太多，可用性降低&quot; class=&quot;headerlink&quot; title=&quot;功能太多，可用性降低&quot;&gt;&lt;/a&gt;功能太多，可用性降低&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;长远来看，增加功能有害无益&lt;br&gt;功能太多，势必降低产品的可用性，也有可能降低主流用户的满意度，从而有损产品长期的盈利能力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;删除一项功能，对不同用户影响不同&quot;&gt;&lt;a href=&quot;#删除一项功能，对不同用户影响不同&quot; class=&quot;headerlink&quot; title=&quot;删除一项功能，对不同用户影响不同&quot;&gt;&lt;/a&gt;删除一项功能，对不同用户影响不同&lt;/h4&gt;&lt;p&gt;想取悦所有用户是不可能的，我们只要专注于目标客户的核心任务，让他们满意就行了&lt;/p&gt;
&lt;h4 id=&quot;满足用户最高优先级的目标，更有价值&quot;&gt;&lt;a href=&quot;#满足用户最高优先级的目标，更有价值&quot; class=&quot;headerlink&quot; title=&quot;满足用户最高优先级的目标，更有价值&quot;&gt;&lt;/a&gt;满足用户最高优先级的目标，更有价值&lt;/h4&gt;&lt;p&gt;在不确定什么功能该保留，什么功能该删除时，根据用户最想要达到的目的，排定优先级，如DVD遥控器&lt;br&gt;确定用户使用过程中的干扰源，判断哪些功能是主要的。如：看DVD时接到电话，填写表单时被打断离开等。&lt;/p&gt;
&lt;h4 id=&quot;减轻用户的负担&quot;&gt;&lt;a href=&quot;#减轻用户的负担&quot; class=&quot;headerlink&quot; title=&quot;减轻用户的负担&quot;&gt;&lt;/a&gt;减轻用户的负担&lt;/h4&gt;&lt;p&gt;去掉可有可无的选项、内容和分散注意力的视觉效果。&lt;br&gt;去掉这些干扰，可以减轻用户的负担，让用户专心做自己想做的事。&lt;br&gt;去掉视觉元素可以让用户感觉更快，更有安全感。&lt;br&gt;&lt;img src=&quot;simple-page.jpg&quot; alt=&quot;简化网页&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;删除没人会看的文字，比如银行名称下面的口号。&lt;br&gt;简化布局，删除页面右侧的垂直边栏，让人容易分清哪些重要，哪些不重要。&lt;br&gt;去掉重复的链接，例如：“告诉我…”之类的下拉菜单，把可点击项的数量减少了20%。&lt;br&gt;精简按钮和链接的样式，让人容易区分哪些可以点击，哪些不能点击。&lt;br&gt;减少广告位和广告数量，让目标明确的客户不致被这些内容干扰分心。&lt;br&gt;去掉分散注意力的元素，如分隔内容的线和横在页面上的黄色背景条，从而减少了视觉上的干扰。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;选择有限，用户反而更欢喜&quot;&gt;&lt;a href=&quot;#选择有限，用户反而更欢喜&quot; class=&quot;headerlink&quot; title=&quot;选择有限，用户反而更欢喜&quot;&gt;&lt;/a&gt;选择有限，用户反而更欢喜&lt;/h4&gt;&lt;p&gt;当用户看到一个复杂界面时，会因为看不懂，玩不转而心烦意乱，而乱中更容易出错。&lt;br&gt;太多的选择容易让人反感。&lt;/p&gt;
&lt;h4 id=&quot;去掉让人分心的东西&quot;&gt;&lt;a href=&quot;#去掉让人分心的东西&quot; class=&quot;headerlink&quot; title=&quot;去掉让人分心的东西&quot;&gt;&lt;/a&gt;去掉让人分心的东西&lt;/h4&gt;&lt;p&gt;相关研究人员发现，增加文档的超链接会降低读者的理解力，即使读者不会打开超链接也一样。&lt;br&gt;网页上经常会看到很多让人分心的东西，如：标题栏上、侧边栏上。&lt;br&gt;一定要牢记删除那些干扰元素。&lt;/p&gt;
&lt;h4 id=&quot;聪明的默认值&quot;&gt;&lt;a href=&quot;#聪明的默认值&quot; class=&quot;headerlink&quot; title=&quot;聪明的默认值&quot;&gt;&lt;/a&gt;聪明的默认值&lt;/h4&gt;&lt;p&gt;默认时是节省用户时间和精力的有效方式，也是清除设计蓝图中“减速带”的首选方式。&lt;/p&gt;
&lt;h4 id=&quot;从删除选项和首选项开始&quot;&gt;&lt;a href=&quot;#从删除选项和首选项开始&quot; class=&quot;headerlink&quot; title=&quot;从删除选项和首选项开始&quot;&gt;&lt;/a&gt;从删除选项和首选项开始&lt;/h4&gt;&lt;p&gt;主流用户不喜欢为设置选项和首选项费心劳神。&lt;/p&gt;
&lt;h4 id=&quot;有时一个选项都多余&quot;&gt;&lt;a href=&quot;#有时一个选项都多余&quot; class=&quot;headerlink&quot; title=&quot;有时一个选项都多余&quot;&gt;&lt;/a&gt;有时一个选项都多余&lt;/h4&gt;&lt;p&gt;主流用户希望“够好就行了，快点”，而专家则希望“尽可能的完美，等多长时间都愿意”&lt;br&gt;例如：电商的结账页面都去掉了顶部和底部的导航链接，要么买，要么关掉走人。&lt;/p&gt;
&lt;h4 id=&quot;清除错误是简化用户体验的一个方面&quot;&gt;&lt;a href=&quot;#清除错误是简化用户体验的一个方面&quot; class=&quot;headerlink&quot; title=&quot;清除错误是简化用户体验的一个方面&quot;&gt;&lt;/a&gt;清除错误是简化用户体验的一个方面&lt;/h4&gt;&lt;p&gt;即使非常小的错误也会让用户烦恼。&lt;br&gt;比如：银行账单查询选择日期控件，公司的工资查询…&lt;br&gt;在设计简单的体验时，关键的一步是确定哪些地方需要错误信息或者检查错误日志，找出常见的错误。&lt;/p&gt;
&lt;h4 id=&quot;删除视觉混乱元素&quot;&gt;&lt;a href=&quot;#删除视觉混乱元素&quot; class=&quot;headerlink&quot; title=&quot;删除视觉混乱元素&quot;&gt;&lt;/a&gt;删除视觉混乱元素&lt;/h4&gt;&lt;p&gt;观察设计方案中的每一个元素，想一想为什么需要它？它能提供什么重要信息，还是能提供支持？&lt;br&gt;如果没它不行，就留着，否则就从方案中删除。书中有一些减少视觉混乱的方法（P98）&lt;/p&gt;
&lt;h4 id=&quot;删除文字&quot;&gt;&lt;a href=&quot;#删除文字&quot; class=&quot;headerlink&quot; title=&quot;删除文字&quot;&gt;&lt;/a&gt;删除文字&lt;/h4&gt;&lt;p&gt;删除文字有下列三大好处：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;重要的内容“水落石出”&lt;/li&gt;
&lt;li&gt;消除了分析满屏内容的麻烦&lt;/li&gt;
&lt;li&gt;读者会对自己看到了什么更有自信&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;应该删除哪些文字？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;删除引见性文字 “欢迎光临我们网站。。。”&lt;/li&gt;
&lt;li&gt;删除不必要的说明 “填写完这些字段后，请您按提交按钮把申请提交给我们”&lt;/li&gt;
&lt;li&gt;删除繁锁的解释，比如一些名词解释&lt;/li&gt;
&lt;li&gt;使用描述性链接：把标题本身作为链接可以让页面更清爽，不要“单击这些” “更多内容”&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;精简句子&quot;&gt;&lt;a href=&quot;#精简句子&quot; class=&quot;headerlink&quot; title=&quot;精简句子&quot;&gt;&lt;/a&gt;精简句子&lt;/h4&gt;&lt;p&gt;几乎任何句子都能够精简，任何文字都可以删除。详细方法（p102）&lt;br&gt;总之去掉废话，没必要的词汇。&lt;/p&gt;
&lt;h4 id=&quot;删除过多&quot;&gt;&lt;a href=&quot;#删除过多&quot; class=&quot;headerlink&quot; title=&quot;删除过多&quot;&gt;&lt;/a&gt;删除过多&lt;/h4&gt;&lt;p&gt;一些关键的操控功能不能删除，人都希望能掌控局面。&lt;br&gt;足够多的控制可以让用户消除基本需求得不到满足而引发的焦虑，但要避免控制太多，导致因选择而浪费时间。&lt;/p&gt;
&lt;h4 id=&quot;你能做到&quot;&gt;&lt;a href=&quot;#你能做到&quot; class=&quot;headerlink&quot; title=&quot;你能做到&quot;&gt;&lt;/a&gt;你能做到&lt;/h4&gt;&lt;p&gt;简单的设计通常出自一位眼光独到的设计师，一位“无情的”或“毫不妥协的”创新者之手，但大多数的团队中，妥协和让步已经成为常态。&lt;/p&gt;
&lt;h4 id=&quot;“删除”策略的核心&quot;&gt;&lt;a href=&quot;#“删除”策略的核心&quot; class=&quot;headerlink&quot; title=&quot;“删除”策略的核心&quot;&gt;&lt;/a&gt;“删除”策略的核心&lt;/h4&gt;&lt;p&gt;就是干掉那些分散注意力的因素，聚焦于项目。&lt;/p&gt;
&lt;h3 id=&quot;组织&quot;&gt;&lt;a href=&quot;#组织&quot; class=&quot;headerlink&quot; title=&quot;组织&quot;&gt;&lt;/a&gt;组织&lt;/h3&gt;&lt;p&gt;组织是简化设计的最快捷方式。&lt;br&gt;重点：只强调一两个最重要的主题，太多层次用户眼花缭乱&lt;/p&gt;
&lt;h4 id=&quot;分块&quot;&gt;&lt;a href=&quot;#分块&quot; class=&quot;headerlink&quot; title=&quot;分块&quot;&gt;&lt;/a&gt;分块&lt;/h4&gt;&lt;p&gt;经典建议，把项组织到“7加减1”个块中；理论上讲，这个数字是人的大脑瞬间能够记住的最大数目。&lt;br&gt;但并不是所有情况都需分块。比如：a-z排序清单&lt;/p&gt;
&lt;h4 id=&quot;围绕用户的行为进行组织&quot;&gt;&lt;a href=&quot;#围绕用户的行为进行组织&quot; class=&quot;headerlink&quot; title=&quot;围绕用户的行为进行组织&quot;&gt;&lt;/a&gt;围绕用户的行为进行组织&lt;/h4&gt;&lt;p&gt;先搞清楚主流用户心中的操作步骤，然后再进行组织。建议画出用户的行为，这样更容易理解并组织。&lt;/p&gt;
&lt;h4 id=&quot;好的分类是非分明&quot;&gt;&lt;a href=&quot;#好的分类是非分明&quot; class=&quot;headerlink&quot; title=&quot;好的分类是非分明&quot;&gt;&lt;/a&gt;好的分类是非分明&lt;/h4&gt;&lt;p&gt;简单的组织模式具有清晰的界限。有时你会遇到同属于两种类别的东西，太多的重叠会导致困惑。如：西红柿是水果也是蔬菜。&lt;br&gt;所以最简单的分类，通常是指重复交叉最少的分类方法。&lt;/p&gt;
&lt;h4 id=&quot;字母表与格式排序容易把事情搞乱&quot;&gt;&lt;a href=&quot;#字母表与格式排序容易把事情搞乱&quot; class=&quot;headerlink&quot; title=&quot;字母表与格式排序容易把事情搞乱&quot;&gt;&lt;/a&gt;字母表与格式排序容易把事情搞乱&lt;/h4&gt;&lt;p&gt;字母表排序时，如果不知道要找的东西叫什么？&lt;br&gt;格式排序时，如果想看相关联的东西就比较麻烦了，如：视频，图片，文字分类&lt;/p&gt;
&lt;h4 id=&quot;无论是设计还是使用，搜索都比浏览要困难的多&quot;&gt;&lt;a href=&quot;#无论是设计还是使用，搜索都比浏览要困难的多&quot; class=&quot;headerlink&quot; title=&quot;无论是设计还是使用，搜索都比浏览要困难的多&quot;&gt;&lt;/a&gt;无论是设计还是使用，搜索都比浏览要困难的多&lt;/h4&gt;&lt;p&gt;如果想设计简约的体验，最好先对内容有效的组织，再考虑如何搜索。&lt;br&gt;根据 Jared spool 调查，通常用户只有在网站没有提供有效导航的情况下，才会使用搜索。&lt;br&gt;试想：要找到一个恰当的搜索关键词，然后再从结果中挑选出来，这个过程有多麻烦。&lt;/p&gt;
&lt;h4 id=&quot;时间和空间排序&quot;&gt;&lt;a href=&quot;#时间和空间排序&quot; class=&quot;headerlink&quot; title=&quot;时间和空间排序&quot;&gt;&lt;/a&gt;时间和空间排序&lt;/h4&gt;&lt;p&gt;按照时间来组织活动是种简单又通用的方式。&lt;br&gt;一些实体对象，如：酒店，国家之类的，都可以按照空间来组织。&lt;/p&gt;
&lt;h4 id=&quot;网格布局&quot;&gt;&lt;a href=&quot;#网格布局&quot; class=&quot;headerlink&quot; title=&quot;网格布局&quot;&gt;&lt;/a&gt;网格布局&lt;/h4&gt;&lt;p&gt;利用不可见的网格来对齐界面元素，是吸引用户注意力的一种有效方式。&lt;br&gt;网格布局也会让人感觉局促和受压制，可以设计一个不对称的布局来解决这个问题。如：奇数列或跨两三列加少量的元素。&lt;/p&gt;
&lt;h4 id=&quot;大小和位置&quot;&gt;&lt;a href=&quot;#大小和位置&quot; class=&quot;headerlink&quot; title=&quot;大小和位置&quot;&gt;&lt;/a&gt;大小和位置&lt;/h4&gt;&lt;p&gt;利用网格布局界面时，要注意元素的大小和位置，界面元素的大小要和它们的重要性一致。&lt;br&gt;本书中一条规则：如果一个元素的重要性为1/2，那就把它的大小做成1/4.&lt;br&gt;同等重要的元素设计成一样大，把类似的元素放在一起，能减少视觉干扰。&lt;br&gt;在网站中把重要的链接与内容放中间位置。&lt;br&gt;对于触摸界面，优先把导航按钮放在底部，这样用户触摸时不会遮挡屏幕，而在大触屏上，把导航放在左（右）侧，可能会给习惯右（左）手的人带来不便。&lt;/p&gt;
&lt;h4 id=&quot;感知分层技术&quot;&gt;&lt;a href=&quot;#感知分层技术&quot; class=&quot;headerlink&quot; title=&quot;感知分层技术&quot;&gt;&lt;/a&gt;感知分层技术&lt;/h4&gt;&lt;p&gt;利用感知分层技术，我们可以把一些元素放在另一些元素上方，或者两组元素并排起来。如：地铁线路图。&lt;br&gt;感知分层用不同颜色很容易实现，另外，还可以用灰色、阴影、大小缩放，甚至形状变化来实现。书中有详细的技巧（p130）&lt;/p&gt;
&lt;h4 id=&quot;用颜色标记信息&quot;&gt;&lt;a href=&quot;#用颜色标记信息&quot; class=&quot;headerlink&quot; title=&quot;用颜色标记信息&quot;&gt;&lt;/a&gt;用颜色标记信息&lt;/h4&gt;&lt;p&gt;分层信息中的颜色利用了人们的记忆原理，因此给人造成的负担很轻，而使用颜色标记信息的代价很明显：需要人们花时间学习和理解。&lt;br&gt;这些标记在确保人们会花时间学习且会重复使用你的设计时，色标很适合，否则会让人困惑。&lt;/p&gt;
&lt;h4 id=&quot;期望路径&quot;&gt;&lt;a href=&quot;#期望路径&quot; class=&quot;headerlink&quot; title=&quot;期望路径&quot;&gt;&lt;/a&gt;期望路径&lt;/h4&gt;&lt;p&gt;人们并不总是走你为他们铺好的路。&lt;br&gt;不断重复使用软件流程，看哪个地方总是抓住你的眼球，要抛掉自己的逻辑去感觉…&lt;/p&gt;
&lt;h3 id=&quot;隐藏&quot;&gt;&lt;a href=&quot;#隐藏&quot; class=&quot;headerlink&quot; title=&quot;隐藏&quot;&gt;&lt;/a&gt;隐藏&lt;/h3&gt;&lt;p&gt;隐藏都比组织具有一个明显的优势：用户不会因不常用的功能分散注意力。&lt;br&gt;隐藏部分功能是一种低成本的方案，但是，到底该隐藏哪些功能呢？&lt;/p&gt;
&lt;h4 id=&quot;不常用但不能少&quot;&gt;&lt;a href=&quot;#不常用但不能少&quot; class=&quot;headerlink&quot; title=&quot;不常用但不能少&quot;&gt;&lt;/a&gt;不常用但不能少&lt;/h4&gt;&lt;p&gt;寻找要隐藏的功能时，设置通常是首选，因为不会经常改变。还有一些不常用的任务。&lt;/p&gt;
&lt;h4 id=&quot;自定义&quot;&gt;&lt;a href=&quot;#自定义&quot; class=&quot;headerlink&quot; title=&quot;自定义&quot;&gt;&lt;/a&gt;自定义&lt;/h4&gt;&lt;p&gt;自定义可能是一件非常耗时间，非常令人讨厌的事。如：word 中的浮动面板和工具栏。&lt;br&gt;让用户自定义自己的用户界面前提是用户知道如何布局最有效、最高效。&lt;/p&gt;
&lt;h4 id=&quot;自动定制&quot;&gt;&lt;a href=&quot;#自动定制&quot; class=&quot;headerlink&quot; title=&quot;自动定制&quot;&gt;&lt;/a&gt;自动定制&lt;/h4&gt;&lt;p&gt;根据用户行为，自动显示或隐藏某些功能菜单。&lt;br&gt;自动定制不会让界面更简单，反而会把界面搞得更复杂，给用户带来极不便。原因有三个：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;很难保证默认菜单的准确性&lt;/li&gt;
&lt;li&gt;缩短菜单后，用户需要把每个功能看两遍才能确定&lt;/li&gt;
&lt;li&gt;命令的位置可能会变，用户可能找不到&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;渐进展示&quot;&gt;&lt;a href=&quot;#渐进展示&quot; class=&quot;headerlink&quot; title=&quot;渐进展示&quot;&gt;&lt;/a&gt;渐进展示&lt;/h4&gt;&lt;p&gt;隐藏高级选项。一般高级选项专家级用户才会用到&lt;/p&gt;
&lt;h4 id=&quot;阶段展示&quot;&gt;&lt;a href=&quot;#阶段展示&quot; class=&quot;headerlink&quot; title=&quot;阶段展示&quot;&gt;&lt;/a&gt;阶段展示&lt;/h4&gt;&lt;p&gt;随着用户逐渐深入界面而展示相应功能，要遵循几条规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设定一种场景&lt;/li&gt;
&lt;li&gt;讲一个故事&lt;/li&gt;
&lt;li&gt;说用户的语言&lt;/li&gt;
&lt;li&gt;把信息分成小块展示&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;向导是一种阶段展示的形式，但却经常违反上述规则。一旦搞错，用户的感觉就像是被推下了滑梯。&lt;/p&gt;
&lt;h4 id=&quot;适时出现&quot;&gt;&lt;a href=&quot;#适时出现&quot; class=&quot;headerlink&quot; title=&quot;适时出现&quot;&gt;&lt;/a&gt;适时出现&lt;/h4&gt;&lt;p&gt;书中《纽约时报》的例子，说明了什么叫做成功的隐藏。&lt;br&gt;首先，尽可能彻底的隐藏所有需要隐藏的功能；其次，只在合适的时机，合适的位置上显示相应的功能。&lt;/p&gt;
&lt;h4 id=&quot;提示与线索&quot;&gt;&lt;a href=&quot;#提示与线索&quot; class=&quot;headerlink&quot; title=&quot;提示与线索&quot;&gt;&lt;/a&gt;提示与线索&lt;/h4&gt;&lt;p&gt;书中有两个例子，一个好的（ps工具），一个不好的（Google高级）。&lt;br&gt;隐藏处理的好的界面会给人一种优雅的感觉：线索尽管细微，却恰到好处。&lt;/p&gt;
&lt;h4 id=&quot;让功能容易找到&quot;&gt;&lt;a href=&quot;#让功能容易找到&quot; class=&quot;headerlink&quot; title=&quot;让功能容易找到&quot;&gt;&lt;/a&gt;让功能容易找到&lt;/h4&gt;&lt;p&gt;把标签放哪比标签大小重要的多。&lt;br&gt;即使标签很小，但要是放在了用户关注点上也会收到良好的效果。&lt;br&gt;用户关注点：当用户打开一个界面时，关注点就广泛。但当遇到问题时，关注点就全聚集在问题区域，如：表单报错，《纽约时报》例子。&lt;/p&gt;
&lt;h4 id=&quot;隐藏的要求&quot;&gt;&lt;a href=&quot;#隐藏的要求&quot; class=&quot;headerlink&quot; title=&quot;隐藏的要求&quot;&gt;&lt;/a&gt;隐藏的要求&lt;/h4&gt;&lt;p&gt;1.隐藏一次性功能和选项&lt;br&gt;2.隐藏精确控制选项，但专家用户必须可见&lt;br&gt;3.不可强迫或寄希望于主流用户使用自定义功能，可以给专家用户提供&lt;br&gt;4.巧妙的隐藏，换句话说，彻底隐藏适时出现&lt;br&gt;删除、组织和隐藏——可以非常完美的结合起来，删除不必要的，组织要提供的，隐藏非核心的。不过，接下来我主要讨论的最后一个策略：转移，则涉及对界面进行重新布局。&lt;/p&gt;
&lt;h3 id=&quot;转移&quot;&gt;&lt;a href=&quot;#转移&quot; class=&quot;headerlink&quot; title=&quot;转移&quot;&gt;&lt;/a&gt;转移&lt;/h3&gt;&lt;p&gt;把合适的功能转移到合适的设备上，但也要把握度。不要过度的转移，要留下常用的。&lt;/p&gt;
&lt;h4 id=&quot;在设备之间转移&quot;&gt;&lt;a href=&quot;#在设备之间转移&quot; class=&quot;headerlink&quot; title=&quot;在设备之间转移&quot;&gt;&lt;/a&gt;在设备之间转移&lt;/h4&gt;&lt;p&gt;有些功能在有些平台上简单，但在其他平台上就变得复杂，如：小米手环。&lt;/p&gt;
&lt;h4 id=&quot;移动平台与桌面平台&quot;&gt;&lt;a href=&quot;#移动平台与桌面平台&quot; class=&quot;headerlink&quot; title=&quot;移动平台与桌面平台&quot;&gt;&lt;/a&gt;移动平台与桌面平台&lt;/h4&gt;&lt;p&gt;任何设备都有自己的长处与不足。有时候，把某项任务的某些部分（输入信息）转移到不同平台上可能是一种更好的选择。&lt;/p&gt;
&lt;h4 id=&quot;向用户转移&quot;&gt;&lt;a href=&quot;#向用户转移&quot; class=&quot;headerlink&quot; title=&quot;向用户转移&quot;&gt;&lt;/a&gt;向用户转移&lt;/h4&gt;&lt;p&gt;把复杂性转移到用户的头脑中。如作者帮一家旅游网站设计旅行规划程序，第一次，用户反馈差，因为智能型程序不断的评判他们的规划。&lt;br&gt;后来又设计了一个用户可以创建自己命名的文件夹并往里面添加任何想要的东西。&lt;/p&gt;
&lt;h4 id=&quot;用户最擅长做什么&quot;&gt;&lt;a href=&quot;#用户最擅长做什么&quot; class=&quot;headerlink&quot; title=&quot;用户最擅长做什么&quot;&gt;&lt;/a&gt;用户最擅长做什么&lt;/h4&gt;&lt;p&gt;用户指挥计算机操作，就会给人简单的感觉。让用户感到简单的一个重要前提，就是先搞清楚把什么工作交给计算机，把什么工作留给用户。&lt;/p&gt;
&lt;h4 id=&quot;创造开放式体验&quot;&gt;&lt;a href=&quot;#创造开放式体验&quot; class=&quot;headerlink&quot; title=&quot;创造开放式体验&quot;&gt;&lt;/a&gt;创造开放式体验&lt;/h4&gt;&lt;p&gt;让一个组件有多种用途。如：汽车的挡风玻璃的加热电阻丝同时也是收音机天线。把相似的功能绑定到一起，这种简化方式非常巧妙。找一个功能总比在几个类似功能中选择容易。学习一个功能也比学习多个容易，且一个功能更容易维护。&lt;/p&gt;
&lt;h4 id=&quot;菜刀与钢琴&quot;&gt;&lt;a href=&quot;#菜刀与钢琴&quot; class=&quot;headerlink&quot; title=&quot;菜刀与钢琴&quot;&gt;&lt;/a&gt;菜刀与钢琴&lt;/h4&gt;&lt;p&gt;简约界面的最高境界，应该是专家和主流用户都会感觉它非常好用。&lt;br&gt;开放型界面的秘诀在于尽量减少仅适合中级用户的“便捷”特性。&lt;/p&gt;
&lt;h4 id=&quot;非结构化数据&quot;&gt;&lt;a href=&quot;#非结构化数据&quot; class=&quot;headerlink&quot; title=&quot;非结构化数据&quot;&gt;&lt;/a&gt;非结构化数据&lt;/h4&gt;&lt;p&gt;表单的输入信息格式不要太严格，如：允许卡号间有空格、电话号码中有｀-,()｀。后台多加几行代码就能解决。&lt;/p&gt;
&lt;h4 id=&quot;信任用户&quot;&gt;&lt;a href=&quot;#信任用户&quot; class=&quot;headerlink&quot; title=&quot;信任用户&quot;&gt;&lt;/a&gt;信任用户&lt;/h4&gt;&lt;p&gt;如果想把任务转移到用户一方，你必须相信用户有能力完成该任务。&lt;/p&gt;
&lt;h3 id=&quot;最后的叮嘱&quot;&gt;&lt;a href=&quot;#最后的叮嘱&quot; class=&quot;headerlink&quot; title=&quot;最后的叮嘱&quot;&gt;&lt;/a&gt;最后的叮嘱&lt;/h3&gt;&lt;h4 id=&quot;顽固的复杂性&quot;&gt;&lt;a href=&quot;#顽固的复杂性&quot; class=&quot;headerlink&quot; title=&quot;顽固的复杂性&quot;&gt;&lt;/a&gt;顽固的复杂性&lt;/h4&gt;&lt;p&gt;到了设计简单用户体验的最后，往往不是问“怎样才能把这个功能设计的更简单？”，而是问“到底应该把这个复杂性放在哪？”&lt;/p&gt;
&lt;h4 id=&quot;细节&quot;&gt;&lt;a href=&quot;#细节&quot; class=&quot;headerlink&quot; title=&quot;细节&quot;&gt;&lt;/a&gt;细节&lt;/h4&gt;&lt;p&gt;书中作者在巴黎坐地铁时，手机上下了一个查路线的应用，发现只写了从几号线倒几号线，但是没有写开往哪个方向，这样作者只能在手机上拖来拖去寻找线路的终点。&lt;/p&gt;
&lt;h4 id=&quot;给用户留下足够的想象空间&quot;&gt;&lt;a href=&quot;#给用户留下足够的想象空间&quot; class=&quot;headerlink&quot; title=&quot;给用户留下足够的想象空间&quot;&gt;&lt;/a&gt;给用户留下足够的想象空间&lt;/h4&gt;&lt;p&gt;让他们能够想象到当前正在做的事情同样也是自己生活的一部分。如：在线查找假期旅行线路和查阅手册比较。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本书作者 Giles Colborne 曾任职于英国航空公司，英国物理学会出版社和灵智集团，二十多年潜心钻研交互式设计与易用性，颇有建树…&lt;br&gt;个人认为，无论是广告设计、室内设计、架构设计或是产品设计等等，设计方法和技巧都是相通的。因为都是针对特定人群而设计的，或者说都有自己的用户，且与用户之间都有交互。&lt;br&gt;
    
    </summary>
    
      <category term="自用笔记" scheme="http://chanh.xyz/categories/%E8%87%AA%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="简约" scheme="http://chanh.xyz/tags/%E7%AE%80%E7%BA%A6/"/>
    
      <category term="交互" scheme="http://chanh.xyz/tags/%E4%BA%A4%E4%BA%92/"/>
    
  </entry>
  
  <entry>
    <title>css 强制换行及强制不换行</title>
    <link href="http://chanh.xyz/2016/06/08/css-%E5%BC%BA%E5%88%B6%E6%8D%A2%E8%A1%8C/"/>
    <id>http://chanh.xyz/2016/06/08/css-强制换行/</id>
    <published>2016-06-08T07:58:15.000Z</published>
    <updated>2016-06-08T09:46:03.292Z</updated>
    
    <content type="html">&lt;p&gt;默认情况下，元素都有默认的 CSS 属性 white-space:normal（自动换行；ps: 不换行是 nowrap），当内容文字超过所定宽度时会自动换行；但如果其内的文字是堆没有空格的字符（正常情况不会出现这样的字符，但有些BT的测试人员就喜欢这样！），就会溢出容器或者把容器撑大，只有遇到空格时才换行。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;常见解决方案&quot;&gt;&lt;a href=&quot;#常见解决方案&quot; class=&quot;headerlink&quot; title=&quot;常见解决方案&quot;&gt;&lt;/a&gt;常见解决方案&lt;/h2&gt;&lt;p&gt;主要分两种情况，一是允许切断单词（暴力）换行&lt;code&gt;word-break&lt;/code&gt;，二是以单词（单词超过一行时自动换行）为单位换行&lt;code&gt;word-wrap&lt;/code&gt;。以IE，Chrome，FF为测试浏览器。&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;word-break&lt;/span&gt;: break-all; &lt;span class=&quot;comment&quot;&gt;/* 支持IE，Chrome，低版FF不支持 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;word-wrap&lt;/span&gt;: break-word; &lt;span class=&quot;comment&quot;&gt;/* 支持IE，Chrome，FF */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;word-break:break-all&lt;/code&gt; 例如：div宽200px，它的内容就会到200px自动换行，如果该行末端有个英文单词很长（congratulation等），它会把单词截断，变成该行末端为congra(congratulation的前端部分)，下一行为tulation（conguatulation的后端部分）了。&lt;br&gt;&lt;code&gt;word-break:break-all&lt;/code&gt; 支持版本：IE5以上 该行为与亚洲语言的 normal 相同。也允许非亚洲语言文本行的任意字内断开。该值适合包含一些非亚洲文本的亚洲文本。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt; word-break : normal | break-all | keep-all&lt;br&gt; &lt;strong&gt;参数：&lt;/strong&gt; normal : 依照亚洲语言和非亚洲语言的文本规则，允许在字内换行&lt;br&gt; 　　　break-all : 该行为与亚洲语言的normal相同。也允许非亚洲语言文本行的任意字内断开。该值适合包含一些非亚洲文本的亚洲文本&lt;br&gt; 　　　keep-all : 与所有非亚洲语言的normal相同。对于中文，韩文，日文，不允许字断开。适合包含少量亚洲文本的非亚洲文本&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;word-wrap:break-word&lt;/code&gt; 例子与上面一样，但区别就是它会把congratulation整个单词看成一个整体，如果该行末端宽度不够显示整个单词，它会自动把整个单词放到下一行，而不会把单词截断掉的。&lt;br&gt;&lt;code&gt;word-wrap:break-word&lt;/code&gt; 支持版本：IE5.5以上 内容将在边界内换行。如果需要，词内换行( word-break )也将发生。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt; word-wrap : normal | break-word&lt;br&gt; &lt;strong&gt;参数：&lt;/strong&gt; normal : 允许内容顶开指定的容器边界&lt;br&gt; 　　　 break-word : 内容将在边界内换行。如果需要，词内换行用（word-break）也能实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;目前 firefox 较新版的浏览器也支持&lt;code&gt;word-break&lt;/code&gt; 属性了，所以用一个属性就能搞定所有常用浏览器了，如下：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;word-break&lt;/span&gt;: break-all; &lt;span class=&quot;comment&quot;&gt;/* 强制换行任意字符，支持IE，Chrome，FF */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;另：&lt;/strong&gt; 强制不换行，结束显示省略号&lt;code&gt;...&lt;/code&gt;，代码如下：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;white-space&lt;/span&gt;: nowrap; &lt;span class=&quot;comment&quot;&gt;/* 强制不换行 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;text-overflow&lt;/span&gt;:ellipsis; &lt;span class=&quot;comment&quot;&gt;/* 溢出部分用省略号代替，IE低版本无省略号 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;overflow&lt;/span&gt;:hidden; &lt;span class=&quot;comment&quot;&gt;/* 必须设置，否则无省略号 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;默认情况下，元素都有默认的 CSS 属性 white-space:normal（自动换行；ps: 不换行是 nowrap），当内容文字超过所定宽度时会自动换行；但如果其内的文字是堆没有空格的字符（正常情况不会出现这样的字符，但有些BT的测试人员就喜欢这样！），就会溢出容器或者把容器撑大，只有遇到空格时才换行。&lt;br&gt;
    
    </summary>
    
      <category term="自用笔记" scheme="http://chanh.xyz/categories/%E8%87%AA%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="word-break" scheme="http://chanh.xyz/tags/word-break/"/>
    
      <category term="word-wrap" scheme="http://chanh.xyz/tags/word-wrap/"/>
    
      <category term="white-space" scheme="http://chanh.xyz/tags/white-space/"/>
    
      <category term="ellipsis" scheme="http://chanh.xyz/tags/ellipsis/"/>
    
  </entry>
  
  <entry>
    <title>一个基于React+Reflux+Webpack+Gulp+Less+React-Router的项目</title>
    <link href="http://chanh.xyz/2016/06/02/%E4%B8%80%E4%B8%AA%E5%9F%BA%E4%BA%8EReact-Reflux-Webpack-Gulp-Less-React-Router%E7%9A%84%E9%A1%B9%E7%9B%AE/"/>
    <id>http://chanh.xyz/2016/06/02/一个基于React-Reflux-Webpack-Gulp-Less-React-Router的项目/</id>
    <published>2016-06-02T09:30:31.000Z</published>
    <updated>2016-06-02T09:44:57.025Z</updated>
    
    <content type="html">&lt;p&gt;此项目基于 &lt;a href=&quot;https://github.com/gulpjs/gulp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp&lt;/a&gt;, &lt;a href=&quot;https://github.com/less/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;less&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/webpack/webpack&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;webpack&lt;/a&gt;构建. View 层用 &lt;a href=&quot;https://github.com/facebook/react&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React&lt;/a&gt; 实现, 内部数据流使用  &lt;a href=&quot;https://github.com/spoike/refluxjs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reflux&lt;/a&gt;架构； 路由管理使用 &lt;a href=&quot;https://github.com/rackt/react-router&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React-Router&lt;/a&gt;.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Reflux-架构&quot;&gt;&lt;a href=&quot;#Reflux-架构&quot; class=&quot;headerlink&quot; title=&quot;Reflux 架构&quot;&gt;&lt;/a&gt;Reflux 架构&lt;/h2&gt;&lt;p&gt;一个单向数据流架构，其中包含三个重要组成部分：Actions, Stores, Components (View)&lt;br&gt;详细参考第三方&lt;a href=&quot;https://segmentfault.com/a/1190000002793786&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中文版API&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;/2016/06/02/一个基于React-Reflux-Webpack-Gulp-Less-React-Router的项目/reflux.png&quot; alt=&quot;[Reflux架构]&quot; title=&quot;[Reflux架构]&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;项目文件目录&quot;&gt;&lt;a href=&quot;#项目文件目录&quot; class=&quot;headerlink&quot; title=&quot;项目文件目录&quot;&gt;&lt;/a&gt;项目文件目录&lt;/h2&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── dist    &lt;span class=&quot;comment&quot;&gt;// build目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  ├── css&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  ├── fonts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  ├── js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  └── index&lt;span class=&quot;selector-class&quot;&gt;.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└── src     &lt;span class=&quot;comment&quot;&gt;// 源文件目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── images    &lt;span class=&quot;comment&quot;&gt;// 图片目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── less    &lt;span class=&quot;comment&quot;&gt;// less 文件目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── scripts     &lt;span class=&quot;comment&quot;&gt;// js 源码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   ├── app     &lt;span class=&quot;comment&quot;&gt;// 与 routes 对应的 smart components （智能组件）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   │   ├── activity    &lt;span class=&quot;comment&quot;&gt;// 活动页面的 actions stores view&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   │   │   ├── api     &lt;span class=&quot;comment&quot;&gt;// ajax 请求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   │   │   ├── components    &lt;span class=&quot;comment&quot;&gt;// 活动相关组件 view&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   │   │   ├── stores    &lt;span class=&quot;comment&quot;&gt;// 活动页面的数据模型层&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   │   │   └── actions&lt;span class=&quot;selector-class&quot;&gt;.js&lt;/span&gt;    &lt;span class=&quot;comment&quot;&gt;// 活动页面的动作交互&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   │   ├── error     &lt;span class=&quot;comment&quot;&gt;// 404, 403 UI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   │   ├── event     &lt;span class=&quot;comment&quot;&gt;// 事件页面的 actions stores view （与活动类同）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   │   ├── login     &lt;span class=&quot;comment&quot;&gt;// 登录页面UI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   │   └── app&lt;span class=&quot;selector-class&quot;&gt;.jsx&lt;/span&gt;     &lt;span class=&quot;comment&quot;&gt;// layout UI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   ├── components    &lt;span class=&quot;comment&quot;&gt;// 通用木偶(Dumb)组件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   ├── utils     &lt;span class=&quot;comment&quot;&gt;// auth 服务，常用工具类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   ├── config&lt;span class=&quot;selector-class&quot;&gt;.js&lt;/span&gt;     &lt;span class=&quot;comment&quot;&gt;// 常量配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   ├── main&lt;span class=&quot;selector-class&quot;&gt;.js&lt;/span&gt;     &lt;span class=&quot;comment&quot;&gt;// 把 router 组件绑定到 html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   └── routes&lt;span class=&quot;selector-class&quot;&gt;.js&lt;/span&gt;     &lt;span class=&quot;comment&quot;&gt;// 路由配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    └── index.html&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;智能(smart)组件：含有状态(state)控制的组件。&lt;br&gt;木偶(Dumb)组件：没有状态(state)控制的展示组件，通常是可复用的部分。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;React-Router-路由配置&quot;&gt;&lt;a href=&quot;#React-Router-路由配置&quot; class=&quot;headerlink&quot; title=&quot;React Router 路由配置&quot;&gt;&lt;/a&gt;React Router 路由配置&lt;/h2&gt;&lt;p&gt;路由通常是一个单页应用的核心，用来控制不同视图间切换。监听 location 中 hash 的变化来实现不同 components 的展视。&lt;br&gt;此应用的 URLs 与 components 对照：&lt;br&gt;URL                               | Components&lt;br&gt;———————————-|———–&lt;br&gt;&lt;code&gt;/&lt;/code&gt;                               | &lt;code&gt;App&lt;/code&gt;&lt;br&gt;&lt;code&gt;/activity&lt;/code&gt;                       | &lt;code&gt;App -&amp;gt; ActivityManage&lt;/code&gt;&lt;br&gt;&lt;code&gt;/activity/add&lt;/code&gt;                   | &lt;code&gt;App -&amp;gt; ActivityManage -&amp;gt; ActivityAdd&lt;/code&gt;&lt;br&gt;&lt;code&gt;/activity/:activityId/edit&lt;/code&gt;      | &lt;code&gt;App -&amp;gt; ActivityManage -&amp;gt; ActivityAdd&lt;/code&gt;&lt;br&gt;&lt;code&gt;/activity/:activityId/unit/add&lt;/code&gt;  | &lt;code&gt;App -&amp;gt; UnitAdd&lt;/code&gt;&lt;br&gt;&lt;code&gt;/activity/unit/:unitId/edit&lt;/code&gt;     | &lt;code&gt;App -&amp;gt; UnitAdd&lt;/code&gt;&lt;br&gt;&lt;code&gt;/activity/:id/detail&lt;/code&gt;            | &lt;code&gt;App -&amp;gt; ActivityDetail&lt;/code&gt;&lt;br&gt;&lt;code&gt;/activity/unit/:id/detail&lt;/code&gt;       | &lt;code&gt;App -&amp;gt; UnitDetail&lt;/code&gt;&lt;br&gt;&lt;code&gt;/event&lt;/code&gt;                          | &lt;code&gt;App -&amp;gt; EventManage&lt;/code&gt;&lt;br&gt;&lt;code&gt;/accessdenied&lt;/code&gt;                   | &lt;code&gt;App -&amp;gt; AccessDenied&lt;/code&gt;&lt;br&gt;&lt;code&gt;/*&lt;/code&gt;                              | &lt;code&gt;App -&amp;gt; NotFound&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;代码片段&quot;&gt;&lt;a href=&quot;#代码片段&quot; class=&quot;headerlink&quot; title=&quot;代码片段&quot;&gt;&lt;/a&gt;代码片段&lt;/h3&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# src/scripts/routes.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import &amp;#123; Router, Route, IndexRoute, IndexRedirect, useRouterHistory, hashHistory &amp;#125; from &#39;react-router&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import &amp;#123; createHashHistory &amp;#125; from &#39;history&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const appHistory = useRouterHistory(createHashHistory)(&amp;#123; queryKey: true &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const routes = (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;Router history=&amp;#123;appHistory&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;Route path=&#39;/&#39; component=&amp;#123; App &amp;#125; onEnter=&amp;#123;onEnterApp&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;IndexRedirect to=&quot;activity&quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;Route path=&#39;activity&#39; component=&amp;#123; ActivityManage &amp;#125; onEnter=&amp;#123;requireAuth.bind(this, roles.activity)&amp;#125; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;Route path=&#39;add&#39; component=&amp;#123;ActivityAdd&amp;#125; onEnter=&amp;#123;requireAuth.bind(this, roles.activity)&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;Route path=&#39;:activityId/edit&#39; component=&amp;#123;ActivityAdd&amp;#125; onEnter=&amp;#123;requireAuth.bind(this, roles.activity)&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/Route&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;Route path=&quot;activity/:activityId/unit/add&quot; component=&amp;#123;UnitAdd&amp;#125; onEnter=&amp;#123;requireAuth.bind(this, roles.activity)&amp;#125;&amp;gt;&amp;lt;/Route&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;Route path=&quot;activity/unit/:unitId/edit&quot; component=&amp;#123;UnitAdd&amp;#125; onEnter=&amp;#123;requireAuth.bind(this, roles.activity)&amp;#125;&amp;gt;&amp;lt;/Route&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;Route path=&quot;activity/:id/detail&quot; component=&amp;#123;ActivityDetail&amp;#125; onEnter=&amp;#123;requireAuth.bind(this, roles.activity)&amp;#125;&amp;gt;&amp;lt;/Route&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;Route path=&quot;activity/unit/:id/detail&quot; component=&amp;#123;UnitDetail&amp;#125; onEnter=&amp;#123;requireAuth.bind(this, roles.activity)&amp;#125;&amp;gt;&amp;lt;/Route&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;Route path=&#39;event&#39; component=&amp;#123; EventManage &amp;#125; onEnter=&amp;#123;requireAuth.bind(this, roles.event)&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;Route path=&#39;accessdenied&#39; component=&amp;#123;AccessDenied&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;Route path=&#39;*&#39; component=&amp;#123;NotFound&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/Route&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/Router&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function onEnterApp(nextState, replace, callback) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  auth.authorize(null, callback);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function requireAuth(roles, nextState, replace, callback) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if(Principal.isIdentityResolved())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    auth.authorize(roles, callback)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export default routes;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Router-的-history-属性&quot;&gt;&lt;a href=&quot;#Router-的-history-属性&quot; class=&quot;headerlink&quot; title=&quot;Router 的 history 属性&quot;&gt;&lt;/a&gt;Router 的 history 属性&lt;/h3&gt;&lt;p&gt;React Router 是基于history的。所以 history 是 Router 组件上主要的属性。这里的 History 有三种类型 browserHistory, hashHistory, createMemoryHistory。先简单介绍下这三种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;browserHistory:&lt;/strong&gt; 它利用 HTML5 History API 去操纵浏览器的 URL， 并创建真正的 URLs，如：&lt;code&gt;example.com/some/path&lt;/code&gt;。同时需要后端程序的配合，把所有前端routes请求都响应index.html。常用在现代浏览器中，IE9及以下体验不好，会刷新整个页面。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hashHistory:&lt;/strong&gt; 它利用URL中的hash(#)值来实现视图的切换。如：&lt;code&gt;example.com/#/some/path&lt;/code&gt;。这种方式不需要后端做任何操作，同时能兼容低版的浏览器。此项目选用的就是这种类型。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;createMemoryHistory:&lt;/strong&gt; 此类型不能读写浏览器的地址栏URL。常被用在服务端渲染，也可用于测试和其它环境（如：React Native）.它和上面两种有点小区别，就是必须要先创建才能使用，这样也有助于测试。 &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; history = createMemoryHistory(location)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;此项目中其实可以在 history 属性中直接引用 hashHistory 的，之所以用当前的方式，是因为参数 &lt;code&gt;{ queryKey: true}&lt;/code&gt; 这个参数是个坑，后面详说。&lt;br&gt;&lt;strong&gt;queryKey:&lt;/strong&gt; 它用来控制地址栏中是否显示&lt;code&gt;?_k=12l0vf&lt;/code&gt;这种随机生成的字符参数；它的作用是用来记录路由切换时的 state 数据；如果此值为&lt;code&gt;false&lt;/code&gt;就不会显示这个串，但也不能接收到上个视图的数据。&lt;br&gt;当时强迫症使然，觉得这个串太碍眼，觉得没啥大用，所以就查了API把&lt;code&gt;queryKey: false&lt;/code&gt;了，结果是我的眼睛爽了，但出现了 Bug，调试了好久。。。才发现是因为这个设置导致不能接收到 &lt;code&gt;location.state&lt;/code&gt;，后来就把这个参数置为 &lt;code&gt;true&lt;/code&gt;了，等价于使用 &lt;code&gt;hashHistory&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Route-组件的属性&quot;&gt;&lt;a href=&quot;#Route-组件的属性&quot; class=&quot;headerlink&quot; title=&quot;Route 组件的属性&quot;&gt;&lt;/a&gt;Route 组件的属性&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path:&lt;/strong&gt; 此属性设置路由的 URL，与父级拼接形成绝对路径，如：&lt;code&gt;/activity/:activityId/edit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;component:&lt;/strong&gt; 此属性设置对应的组件（component）,也就是此路由对应的视图（view）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;onEnter:&lt;/strong&gt; 此属性绑定一个路由进入之前的事件回调函数，它有三个参数 nextState, replace, callback. 具体含义不再赘述，参阅官方API；其中第三个参数 callback 如果传入，代表是异步完成，否则是同步。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此项目的主页面逻辑较为复杂，个人感觉用 Reflux 搞的有点乱，最近在学习 &lt;a href=&quot;http://redux.js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redux&lt;/a&gt; 架构，打算有时间重构一下。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;此项目基于 &lt;a href=&quot;https://github.com/gulpjs/gulp&quot;&gt;gulp&lt;/a&gt;, &lt;a href=&quot;https://github.com/less/&quot;&gt;less&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/webpack/webpack&quot;&gt;webpack&lt;/a&gt;构建. View 层用 &lt;a href=&quot;https://github.com/facebook/react&quot;&gt;React&lt;/a&gt; 实现, 内部数据流使用  &lt;a href=&quot;https://github.com/spoike/refluxjs&quot;&gt;Reflux&lt;/a&gt;架构； 路由管理使用 &lt;a href=&quot;https://github.com/rackt/react-router&quot;&gt;React-Router&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
      <category term="术业专攻" scheme="http://chanh.xyz/categories/%E6%9C%AF%E4%B8%9A%E4%B8%93%E6%94%BB/"/>
    
    
      <category term="React" scheme="http://chanh.xyz/tags/React/"/>
    
      <category term="Reflux" scheme="http://chanh.xyz/tags/Reflux/"/>
    
      <category term="React-Router" scheme="http://chanh.xyz/tags/React-Router/"/>
    
  </entry>
  
  <entry>
    <title>设置 GitHub SSH Keys</title>
    <link href="http://chanh.xyz/2016/06/01/settingsSSHKeysOfGitHub/"/>
    <id>http://chanh.xyz/2016/06/01/settingsSSHKeysOfGitHub/</id>
    <published>2016-06-01T03:40:45.000Z</published>
    <updated>2017-06-23T07:19:11.007Z</updated>
    
    <content type="html">&lt;p&gt;让本地git项目与远程的github建立联系，需要设置SSH keys。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;检查-SSH-keys-的设置&quot;&gt;&lt;a href=&quot;#检查-SSH-keys-的设置&quot; class=&quot;headerlink&quot; title=&quot;检查 SSH keys 的设置&quot;&gt;&lt;/a&gt;检查 SSH keys 的设置&lt;/h2&gt;&lt;p&gt;首先我们需要检查电脑上现有的 ssh key:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/.ssh &lt;span class=&quot;comment&quot;&gt;#检查本机的ssh密钥&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果提示：No such file or directory 说明你机器上不存在旧的 SSH key&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;生成新的-SSH-Key&quot;&gt;&lt;a href=&quot;#生成新的-SSH-Key&quot; class=&quot;headerlink&quot; title=&quot;生成新的 SSH Key:&quot;&gt;&lt;/a&gt;生成新的 SSH Key:&lt;/h2&gt;&lt;p&gt;首先用 ssh-keygen 生成一个密钥&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh-keygen -t rsa -C &amp;quot;邮箱名@youremail.com&amp;quot;
Generating public/private rsa key pair.
Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&amp;lt;回车就行&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;注意：此处的 &lt;code&gt;-C&lt;/code&gt; 的是大写的 &lt;code&gt;C&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后会提示输入密码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Enter passphrase (empty for no passphrase):&amp;lt;输入密码&amp;gt;
Enter same passphrase again:&amp;lt;输入密码&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;在回车中会提示你输入一个密码，这个密码会在你提交项目时使用，如果为空的话提交项目时则不用输入。这个设置是防止别人往你的项目里提交内容。&lt;br&gt;&lt;strong&gt;注意：&lt;/strong&gt;输入密码的时候没有*字样的，你直接输入就可以了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最后看到这样的界面，就成功设置 ssh key 了&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Your identification has been saved in
/Users/your_user_directory/.ssh/id_rsa.
Your public key has been saved in
/Users/your_user_directory/.ssh/id_rsa.pub.
The key fingerprint is: f3:ee:40:05:56:ab:fa:ac:14:72:8b:a2:44:ed:75:04 user_name@email.com
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;添加-SSH-key-到-ssh-agent&quot;&gt;&lt;a href=&quot;#添加-SSH-key-到-ssh-agent&quot; class=&quot;headerlink&quot; title=&quot;添加 SSH key 到 ssh-agent&quot;&gt;&lt;/a&gt;添加 SSH key 到 ssh-agent&lt;/h2&gt;&lt;p&gt;如果检测到本机存在 ssh key， 就要重新生成一个 SSH key, 添加到 ssh-agent&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;确保 ssh-agent 是启动的&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#启动 ssh-agent
$ eval &amp;quot;$(ssh-agent -s)&amp;quot;
Agent pid 59566
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;上面是 Git Bash 的格式，如果用其它 terminal 工具，去掉 &lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt; 即可&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加 SSH key&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh-add ~/.ssh/id_rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;添加-SSH-Key-到-GitHub-账号&quot;&gt;&lt;a href=&quot;#添加-SSH-Key-到-GitHub-账号&quot; class=&quot;headerlink&quot; title=&quot;添加 SSH Key 到 GitHub 账号&quot;&gt;&lt;/a&gt;添加 SSH Key 到 GitHub 账号&lt;/h2&gt;&lt;p&gt;在本机设置SSH Key之后，需要添加到GitHub上，以完成SSH连接接的设置。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开本地 C:\Documents and Settings\your_user_directory.ssh\id_rsa.pub 文件。此文件里面内容为刚才生成的密钥。如果看不到这个文件，你需要设置显示隐藏文件。准确的复制这个文件的内容，才能保证设置的成功。&lt;/li&gt;
&lt;li&gt;登陆github系统。点击右上角的 Settings ??&amp;gt; SSH and GPG keys ??&amp;gt; New SSH key&lt;/li&gt;
&lt;li&gt;把你本地生成的密钥复制到里面（key文本框中），Title 可写中文标题，以区分其它绑定的机器， 点击 add SSH key 就 ok 了&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;测试-SSH-连接&quot;&gt;&lt;a href=&quot;#测试-SSH-连接&quot; class=&quot;headerlink&quot; title=&quot;测试 SSH 连接&quot;&gt;&lt;/a&gt;测试 SSH 连接&lt;/h2&gt;&lt;p&gt;可以输入下面的命令，看看设置是否成功，git@github.com的部分不要修改：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh -T git@github.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果是下面的反馈：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;The authenticity of host &amp;apos;github.com (207.97.227.239)&amp;apos; can&amp;apos;t be established.
RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)?
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;不要紧张，输入yes就好，然后会看到：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Hi chanh! You&amp;apos;ve successfully authenticated, but GitHub does not provide shell access.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果出现如下错误：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Error: Permission denied (publickey).
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;可以参考官网解决方案：&lt;a href=&quot;https://help.github.com/articles/error-permission-denied-publickey/#platform-windows&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://help.github.com/articles/error-permission-denied-publickey/#platform-windows&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;设置-git-全局用户信息&quot;&gt;&lt;a href=&quot;#设置-git-全局用户信息&quot; class=&quot;headerlink&quot; title=&quot;设置 git 全局用户信息&quot;&gt;&lt;/a&gt;设置 git 全局用户信息&lt;/h2&gt;&lt;p&gt;Git 会根据用户的名字和邮箱来记录提交。GitHub 也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字必须是你的真名，而不是GitHub的昵称。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git config --global user.name &amp;quot;username&amp;quot;//用户名
$ git config --global user.email  &amp;quot;emailName@gmail.com&amp;quot;//填写自己的邮箱
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;让本地git项目与远程的github建立联系，需要设置SSH keys。&lt;br&gt;
    
    </summary>
    
      <category term="自用笔记" scheme="http://chanh.xyz/categories/%E8%87%AA%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SSHKey" scheme="http://chanh.xyz/tags/SSHKey/"/>
    
      <category term="GitHub" scheme="http://chanh.xyz/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>用hexo在GitHub上写博客</title>
    <link href="http://chanh.xyz/2016/05/27/%E7%94%A8hexo%E5%9C%A8GitHub%E4%B8%8A%E5%86%99%E5%8D%9A%E5%AE%A2/"/>
    <id>http://chanh.xyz/2016/05/27/用hexo在GitHub上写博客/</id>
    <published>2016-05-27T06:11:07.000Z</published>
    <updated>2016-05-30T09:34:58.614Z</updated>
    
    <content type="html">&lt;p&gt;hexo出自台湾大学生 &lt;a href=&quot;http://twitter.com/tommy351&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tommy351&lt;/a&gt; 之手，是一个基于Node.js的静态博客程序，其编译上百篇文字只需要几秒。hexo生成的静态网页可以直接放到GitHub Pages，BAE，SAE等平台上。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;安装NodeJS&lt;/li&gt;
&lt;li&gt;安装Git&lt;/li&gt;
&lt;li&gt;自己喜欢的编辑器或者IDE&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;&lt;p&gt;node和git安装方法官网都有，这里不再赘述；IDE本人用的 Webstorm，适合项目多的使用，比较好用的编辑器有 Subline Text 等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;Node 和 Git 都安装好后，可执行如下命令安装hexo:&lt;br&gt;&lt;figure class=&quot;highlight avrasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g hexo-&lt;span class=&quot;keyword&quot;&gt;cli&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;初始化&quot;&gt;&lt;a href=&quot;#初始化&quot; class=&quot;headerlink&quot; title=&quot;初始化&quot;&gt;&lt;/a&gt;初始化&lt;/h2&gt;&lt;p&gt;然后，执行init命令初始化hexo到你指定的目录：&lt;br&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo init &lt;span class=&quot;symbol&quot;&gt;&amp;lt;folder&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&amp;lt;folder&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;也可以先cd到目标目录，然后再执行hexo init.&lt;/p&gt;
&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;生成静态页面&quot;&gt;&lt;a href=&quot;#生成静态页面&quot; class=&quot;headerlink&quot; title=&quot;生成静态页面&quot;&gt;&lt;/a&gt;生成静态页面&lt;/h2&gt;&lt;p&gt;cd 到你的init目录，执行如下命令，生成静态页面至 hexo\public\ 目录：&lt;br&gt;&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;generate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;命令必须在init目录下执行，否则不成功，但也不会报错。&lt;br&gt;当你修改文章Tag或内容，不能正确的重新生成内容，可以删除 hexo\db.json 后重试，还不行就到 public 目录删除对应的文件，重新生成。&lt;/p&gt;
&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;本地启动&quot;&gt;&lt;a href=&quot;#本地启动&quot; class=&quot;headerlink&quot; title=&quot;本地启动&quot;&gt;&lt;/a&gt;本地启动&lt;/h2&gt;&lt;p&gt;执行如下命令，启动本地服务，进行文章预览调试。&lt;br&gt;&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;server&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;浏览器输入 &lt;a href=&quot;http://localhost:4000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000&lt;/a&gt; 就可以看到效果&lt;/p&gt;
&lt;h2 id=&quot;写文章&quot;&gt;&lt;a href=&quot;#写文章&quot; class=&quot;headerlink&quot; title=&quot;写文章&quot;&gt;&lt;/a&gt;写文章&lt;/h2&gt;&lt;p&gt;执行new命令，生成指定名称的文章至 hexo\source_posts\postName.md。&lt;br&gt;&lt;figure class=&quot;highlight accesslog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new &lt;span class=&quot;string&quot;&gt;[layout]&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;postName&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;其中 layout 是可选参数，默认值为 post。有哪些 layout 可以在 scaffolds 目录下查看，这些文件名称就是 layout 名称。当然你也可以添加自己的 layout, 方法就是添加一个文件即可，同时你也可以编辑现有的 layout，比如 post 的 layout 默认是 hexo\scaffolds\post.md&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;title:&lt;/span&gt; &amp;#123; &amp;#123; title &amp;#125; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;date:&lt;/span&gt; &amp;#123; &amp;#123; date &amp;#125; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;tags:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;&lt;p&gt;注意：大括号与大括号之间我多加了空格，否则会读出本博文的变量。&lt;/p&gt;
&lt;/blockquote&gt;
我想添加Categories, 以免每次手工输入，只需要修改这个文件添加一行，如下：&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;title:&lt;/span&gt; &amp;#123; &amp;#123; title &amp;#125; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;date:&lt;/span&gt; &amp;#123; &amp;#123; date &amp;#125; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;categories:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;tags:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;postName是md文件的名字，同时也出现在你文章的URL中，postName如果包含空格，必须用””将其包围，postName可以为中文。&lt;br&gt;看一下刚才生成的文件 hexo\source_posts\postName.md ，内容如下：&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;title:&lt;/span&gt; postName &lt;span class=&quot;comment&quot;&gt;#文章页面上的显示名称，可以任意修改，不会出现在URL中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;date:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;bullet&quot;&gt;-05&lt;/span&gt;&lt;span class=&quot;bullet&quot;&gt;-27&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;07&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#文章生成时间，一般不改，当然也可以任意修改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;categories:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#文章分类目录，可以为空，注意:后面有个空格&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;tags:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#文章标签，可空，多标签请用格式[tag1,tag2,tag3]，注意:后面有个空格&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这里开始使用markdown格式输入你的正文。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
接下来，你就可以用喜爱的编辑器尽情书写你的文章。关于markdown语法，可以查阅官网API。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;文章摘要&quot;&gt;&lt;a href=&quot;#文章摘要&quot; class=&quot;headerlink&quot; title=&quot;文章摘要&quot;&gt;&lt;/a&gt;文章摘要&lt;/h2&gt;&lt;p&gt;在需要显示摘要的地方添加如下代码即可：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;以上是摘要&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- more --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;以下是余下全文&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;more以上内容即是文章摘要，在主页显示，more以下内容点击『 More &amp;gt;&amp;gt; 』链接打开全文才显示。&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;注意：hexo中所有文件的编码格式均是UTF-8。&lt;/p&gt;
&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;主题安装&quot;&gt;&lt;a href=&quot;#主题安装&quot; class=&quot;headerlink&quot; title=&quot;主题安装&quot;&gt;&lt;/a&gt;主题安装&lt;/h2&gt;&lt;p&gt;萝卜白菜各有所爱，玩博客换主题是必不可少的，hexo 的主题列表 &lt;a href=&quot;https://hexo.io/docs/themes.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo Themes&lt;/a&gt; 。&lt;br&gt;我比较喜欢 &lt;a href=&quot;http://github.com/A-limon/pacman&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pacman&lt;/a&gt; ， &lt;a href=&quot;https://github.com/MOxFIVE/hexo-theme-yelee&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;yelee&lt;/a&gt; 。 Pacman 简洁大方小清新，同时移动版本支持的也很好，但作者并没有把很多参数分离出来给出可配置项，我最终选择了 yelee, 个人感觉效果更炫一点 。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装主题的方法就是一句git命令：&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;https&lt;/span&gt;://github.com/MOxFIVE/hexo-theme-yelee.git themes/yelee&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装完成后，打开 hexo_config.yml ，修改主题为 yelee&lt;/p&gt;
&lt;figure class=&quot;highlight avrasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;theme:&lt;/span&gt; yelee&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开 hexo\themes\yelee 目录，编辑主题配置文件 _config.yml ；详细配置参照 &lt;a href=&quot;https://github.com/MOxFIVE/hexo-theme-yelee&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Yelee API&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;更新主题&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; themes/yelee&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git pull&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;404-页面&quot;&gt;&lt;a href=&quot;#404-页面&quot; class=&quot;headerlink&quot; title=&quot;404 页面&quot;&gt;&lt;/a&gt;404 页面&lt;/h2&gt;&lt;p&gt;GitHub Pages 自定义404页面 非常容易，直接在根目录下创建自己的 404.html 就可以。但是自定义404页面仅对绑定顶级域名的项目才起作用，GitHub默认分配的二级域名是不起作用的，使用 hexo server 在本机调试也是不起作用的。&lt;br&gt;其实，404页面可以做更多有意义的事，来做个404公益项目吧。做点有意义的事情，也对得起这个域名。&lt;br&gt;目前有如下几个公益404接入地址，我选择了腾讯的。404页面，每个人可以做的更多。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.qq.com/404/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;腾讯公益404&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yibo.iyiyun.com/Index/web404&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;404公益_益云(公益互联网)社会创新中心&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://404page.missingkids.org.tw/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;失蹤兒童少年資料管理中心404&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;申请域名（可选）&quot;&gt;&lt;a href=&quot;#申请域名（可选）&quot; class=&quot;headerlink&quot; title=&quot;申请域名（可选）&quot;&gt;&lt;/a&gt;申请域名（可选）&lt;/h2&gt;&lt;p&gt;GitHubPages默认为每个用户分配了一个二级域名『your_user_name.github.io』。&lt;br&gt;如果你对上述域名不满意，可以到 &lt;a href=&quot;http://www.godaddy.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;狗爹&lt;/a&gt; 上申请一个自己的域名，然后绑定到GitHub Pages。绑定方法很简单，在repo根目录下建立一个CNAME文件，里面写上域名即可。&lt;/p&gt;
&lt;h3 id=&quot;GoDaddy&quot;&gt;&lt;a href=&quot;#GoDaddy&quot; class=&quot;headerlink&quot; title=&quot;GoDaddy&quot;&gt;&lt;/a&gt;GoDaddy&lt;/h3&gt;&lt;p&gt;买域名首选狗爹，国内的服务商大家都懂的。&lt;br&gt;目前.site域名只要￥20，但据说续费比较贵，我是先玩下，一年后再换，至于搜索引擎重新索引之类的，无所谓。.me和.com域名稍微贵点，大约￥60-100，网上有很多优惠码可用，可惜有的优惠码有限制。比如有个.com域名优惠码只要$0.99，但只能用国外信用卡购买。更多优惠码可以自行谷歌或到 &lt;a href=&quot;http://www.dute.me/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;独特优惠码&lt;/a&gt; 找。不着急的同学可以将中意的域名加入购物车先不付款，过几天，狗爹就会发优惠信息给你。狗爹不定期也会有活动，可以多关注。&lt;br&gt;付款后，需要稍微等一会你才会拿到域名，特别是支付宝付款的，要等大约半小时左右。此外域名要一年年的买，这样比较划算。&lt;/p&gt;
&lt;h3 id=&quot;DNSPod&quot;&gt;&lt;a href=&quot;#DNSPod&quot; class=&quot;headerlink&quot; title=&quot;DNSPod&quot;&gt;&lt;/a&gt;DNSPod&lt;/h3&gt;&lt;p&gt;GoDaddy的NameServers有时会被墙，因此墙裂推荐国内的 &lt;a href=&quot;http://www.dnspod.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DNSPod&lt;/a&gt; 解析域名，免费服务真心不错。支持微信/邮件提醒，监控与报警，访问统计，健康诊断，搜索引擎推送，速度哇哇的，对于我来说足够。&lt;br&gt;两步设置就可以搞定，怎么操作参考 &lt;a href=&quot;http://support.dnspod.cn/Kb/showarticle/tsid/42&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Godaddy注册商域名修改DNS地址&lt;/a&gt; 。&lt;/p&gt;
&lt;h2 id=&quot;命令&quot;&gt;&lt;a href=&quot;#命令&quot; class=&quot;headerlink&quot; title=&quot;命令&quot;&gt;&lt;/a&gt;命令&lt;/h2&gt;&lt;h3 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h3&gt;&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;postName&quot;&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;#新建文章&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; page &lt;span class=&quot;string&quot;&gt;&quot;pageName&quot;&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;#新建页面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo generate &lt;span class=&quot;meta&quot;&gt;#生成静态页面至public目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;#开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo deploy &lt;span class=&quot;meta&quot;&gt;#将.deploy目录部署到GitHub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;常用复合命令&quot;&gt;&lt;a href=&quot;#常用复合命令&quot; class=&quot;headerlink&quot; title=&quot;常用复合命令&quot;&gt;&lt;/a&gt;常用复合命令&lt;/h3&gt;&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo deploy -g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;server&lt;/span&gt; -w&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;简写&quot;&gt;&lt;a href=&quot;#简写&quot; class=&quot;headerlink&quot; title=&quot;简写&quot;&gt;&lt;/a&gt;简写&lt;/h3&gt;&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo n == hexo &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo g == hexo &lt;span class=&quot;keyword&quot;&gt;generate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo s == hexo server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo d == hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;hexo出自台湾大学生 &lt;a href=&quot;http://twitter.com/tommy351&quot;&gt;tommy351&lt;/a&gt; 之手，是一个基于Node.js的静态博客程序，其编译上百篇文字只需要几秒。hexo生成的静态网页可以直接放到GitHub Pages，BAE，SAE等平台上。&lt;br&gt;
    
    </summary>
    
      <category term="触类旁通" scheme="http://chanh.xyz/categories/%E8%A7%A6%E7%B1%BB%E6%97%81%E9%80%9A/"/>
    
    
      <category term="nodejs" scheme="http://chanh.xyz/tags/nodejs/"/>
    
      <category term="git" scheme="http://chanh.xyz/tags/git/"/>
    
      <category term="hexo" scheme="http://chanh.xyz/tags/hexo/"/>
    
      <category term="blog" scheme="http://chanh.xyz/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>销售员专用（hybrid app）混合应用</title>
    <link href="http://chanh.xyz/2015/07/14/salesperson/"/>
    <id>http://chanh.xyz/2015/07/14/salesperson/</id>
    <published>2015-07-14T08:25:12.000Z</published>
    <updated>2016-06-27T05:39:46.655Z</updated>
    
    <content type="html">&lt;p&gt;一个移动端（hybrid app）混合应用，销售员通过域帐号认证登录，查看从 AP 系统推送过来的信息，一键拨打客户电话并且确认是否跟踪订单。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;用到的技术&quot;&gt;&lt;a href=&quot;#用到的技术&quot; class=&quot;headerlink&quot; title=&quot;用到的技术&quot;&gt;&lt;/a&gt;用到的技术&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;移动端&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;服务端&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;http://angularjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Angular.js&lt;/a&gt; &lt;img src=&quot;https://avatars1.githubusercontent.com/u/139426?s=30&quot; alt=&quot;Angular.js&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;http://nodejs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt; &lt;img src=&quot;http://nodejs.org/images/logo-light.svg&quot; height=&quot;30&quot; width=&quot;80&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;http://ionicframework.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ionic&lt;/a&gt; &lt;img src=&quot;http://upload.wikimedia.org/wikipedia/commons/d/d1/Ionic_Logo.svg&quot; height=&quot;45&quot; width=&quot;80&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;http://www.mongodb.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MongoDB&lt;/a&gt; &lt;img src=&quot;https://avatars3.githubusercontent.com/u/45120?v=2&amp;amp;s=30&quot; alt=&quot;MongoDB&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://material.angularjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Material Design&lt;/a&gt; &lt;img src=&quot;https://avatars1.githubusercontent.com/u/139426?s=30&quot; alt=&quot;Angularjs&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;http://expressjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Express.js&lt;/a&gt;&lt;img src=&quot;https://cldup.com/wpGXm1cWwB.png&quot; height=&quot;40&quot; width=&quot;145&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://cordova.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cordova&lt;/a&gt; &lt;img src=&quot;https://cordova.apache.org/images/cordova_256.png&quot; height=&quot;35&quot; width=&quot;45&quot;&gt;  &amp;nbsp; &lt;a href=&quot;https://www.jpush.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JPush&lt;/a&gt;极光推送&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;http://redis.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redis&lt;/a&gt; &lt;img src=&quot;http://upload.wikimedia.org/wikipedia/en/thumb/6/6b/Redis_Logo.svg/467px-Redis_Logo.svg.png?v=2&amp;s=30&quot; height=&quot;35&quot; width=&quot;125&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;应用架构&quot;&gt;&lt;a href=&quot;#应用架构&quot; class=&quot;headerlink&quot; title=&quot;应用架构&quot;&gt;&lt;/a&gt;应用架构&lt;/h2&gt;&lt;p&gt;一个端到端的应用架构&lt;br&gt;&lt;img src=&quot;/2015/07/14/salesperson/salesperson-diagram.png&quot; alt=&quot;[应用架构]&quot; title=&quot;[应用架构]&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;数据库层&quot;&gt;&lt;a href=&quot;#数据库层&quot; class=&quot;headerlink&quot; title=&quot;数据库层&quot;&gt;&lt;/a&gt;数据库层&lt;/h3&gt;&lt;p&gt;选择MongoDB数据库,因为它易于存储JSON文档，且比较灵活。数据库有3个(collections)集合。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;users&lt;/strong&gt; - 存储销售员基本信息, 下面是doc结构：&lt;/p&gt;
&lt;figure class=&quot;highlight dts&quot;&gt;&lt;figcaption&gt;&lt;span&gt;User&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;    name:&lt;/span&gt;  &lt;span class=&quot;string&quot;&gt;&quot;姓名&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;    username:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;用户名&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;    password:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;密码&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;    salt:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;    sex:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;性别&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;    nation:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;民族&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;    provider:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;local&quot;&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;// passport strategy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;    updated:&lt;/span&gt; Date,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;    created:&lt;/span&gt; Date&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; 
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;orders&lt;/strong&gt; - 存储销售员的订单信息, 下面是doc结构：&lt;/p&gt;
&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Order&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;_id&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;id2323342&quot;&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;// 订单ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;salesperson&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;wangqh-a&quot;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;//销售员ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;toTrack&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//是否跟进&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; 
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从ＡＰ取过来的数据结构:&lt;br&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;AP 订单数据结构&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;_id&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;orderId224324234&quot;&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;// 订单ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;customer&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;id43214&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;李文&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;phone&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;15210104324&quot;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;//电话&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;company&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;中国海外建设&quot;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//公司名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;salesperson&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;wangqh-a&quot;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;//销售员ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;hasPirate&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// 是否有盗版&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;projects&quot;&lt;/span&gt;: [ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;_id&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;id2343214&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;工程名称&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;hasPirate&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// 是否有盗版&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;keys&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&quot;_id&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;id443324&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&quot;keyNumber&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;v423423&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&quot;isPirate&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// 是否为盗版&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&quot;notes&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// 备注&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&quot;usedTime&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;432142214324&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// 使用时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; &lt;/p&gt;
&lt;h3 id=&quot;REST-服务层&quot;&gt;&lt;a href=&quot;#REST-服务层&quot; class=&quot;headerlink&quot; title=&quot;REST 服务层&quot;&gt;&lt;/a&gt;REST 服务层&lt;/h3&gt;&lt;p&gt;这是整个应用的核心。已认证过的用户，向服务层请求时，根据不同请求作不同的数据库操作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用Node.js作为服务器&lt;/li&gt;
&lt;li&gt;使用express框架实现 REST API&lt;/li&gt;
&lt;li&gt;使用mongoose实现数据模型&lt;/li&gt;
&lt;li&gt;使用JWT生成和验证Token&lt;/li&gt;
&lt;li&gt;使用Redis管理与存储Token&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;服务端 Controller&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sign In: &lt;strong&gt;登录&lt;/strong&gt; 先在本地库中查询是否存在用户，存在即返回 Token；&lt;br&gt; 不存在就向公司域帐号请求认证，成功后向hr系统请求用户信息并保存到数据库。&lt;/li&gt;
&lt;li&gt;Sign Out: &lt;strong&gt;退出&lt;/strong&gt; 删除当前 &lt;/li&gt;
&lt;li&gt;Order: &lt;strong&gt;订单&lt;/strong&gt; 路由：&lt;ul&gt;
&lt;li&gt;orders/notify POST 接收从AP系统推送的销售员ID&lt;code&gt;{&amp;quot;salesperson&amp;quot;: &amp;quot;wangqh-a&amp;quot;}&lt;/code&gt;，并用JPush通知到前端。 &lt;/li&gt;
&lt;li&gt;orders GET 从AP系统获取订单数据 &lt;code&gt;GET ap.glodon.com/api/salesperson/:userId/orders?limit=10&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;orders/:id/projects GET 根据orderId获得工程列表&lt;code&gt;GET ap.glodon.com/api/salesperson/orders/:orderId/projects&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;orders/projects/:id/keys GET 用projectId 获取 keys(工程内的加密锁列表)&lt;code&gt;GET ap.glodon.com/api/salesperson/orders/projects/:projectId/keys&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;orders/:id/track PUT 跟踪订单：把订单的跟踪状态置为 true&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;客户端层&quot;&gt;&lt;a href=&quot;#客户端层&quot; class=&quot;headerlink&quot; title=&quot;客户端层&quot;&gt;&lt;/a&gt;客户端层&lt;/h3&gt;&lt;p&gt;下列是主要用到的技术&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主框架使用 IONIC(cordova + angularJs)&lt;/li&gt;
&lt;li&gt;主题使用 Angular Material&lt;/li&gt;
&lt;li&gt;消息推送使用 jPush 第三方服务&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; 客户端 Controller &lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sign In: 登录页&lt;/li&gt;
&lt;li&gt;Account: 销售员个人信息页面&lt;/li&gt;
&lt;li&gt;Orders: 订单列表页面，列出ap系统推送给销售员的订单&lt;/li&gt;
&lt;li&gt;Projects: 工程列表页面，订单的下级页面，列出此订单里的所有工程&lt;/li&gt;
&lt;li&gt;keys: 工程详情页，工程的下级页面，列出此工程里的加密锁列表&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一个移动端（hybrid app）混合应用，销售员通过域帐号认证登录，查看从 AP 系统推送过来的信息，一键拨打客户电话并且确认是否跟踪订单。&lt;br&gt;
    
    </summary>
    
      <category term="术业专攻" scheme="http://chanh.xyz/categories/%E6%9C%AF%E4%B8%9A%E4%B8%93%E6%94%BB/"/>
    
    
      <category term="hybrid" scheme="http://chanh.xyz/tags/hybrid/"/>
    
      <category term="nodejs" scheme="http://chanh.xyz/tags/nodejs/"/>
    
      <category term="angularJs" scheme="http://chanh.xyz/tags/angularJs/"/>
    
      <category term="cordova" scheme="http://chanh.xyz/tags/cordova/"/>
    
      <category term="mongoDB" scheme="http://chanh.xyz/tags/mongoDB/"/>
    
  </entry>
  
</feed>
